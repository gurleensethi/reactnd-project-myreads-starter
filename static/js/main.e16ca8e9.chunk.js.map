{"version":3,"sources":["BooksAPI.js","common/book/Book.js","common/book/BookList.js","home/Bookshelf.js","home/Home.js","search/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","data","books","Book","props","title","authors","imageLinks","updateBookShelf","className","style","width","height","backgroundImage","thumbnail","value","onChange","event","target","disabled","BookList","this","map","key","React","Component","BookShelf","length","filter","b","Home","to","Search","state","handleQueryChange","setState","scheduleSearch","clearTimeout","searchTimeout","setTimeout","searchBooks","BookAPI","Array","isArray","prevState","componentWillUnmount","onSearchClose","find","onClick","type","placeholder","BooksApp","handleUpdateBook","BooksAPI","response","newBook","push","exact","path","render","history","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e16ca8e9.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Book(props) {\n  let { title, authors, imageLinks, shelf, updateBookShelf } = props;\n\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(\"${imageLinks && imageLinks.thumbnail}\")`\n            }}\n          ></div>\n          <div className=\"book-shelf-changer\">\n            <select\n              value={shelf || \"none\"}\n              onChange={event => updateBookShelf(event.target.value)}\n            >\n              <option value=\"move\" disabled>\n                Move to...\n              </option>\n              <option value=\"currentlyReading\">Currently Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\">Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{title}</div>\n        <div className=\"book-authors\">{authors && authors[0]}</div>\n      </div>\n    </li>\n  );\n}\n\nBook.propTypes = {\n  title: PropTypes.string.isRequired,\n  authors: PropTypes.array.isRequired,\n  imageLinks: PropTypes.object.isRequired,\n  shelf: PropTypes.string,\n  updateBookShelf: PropTypes.func.isRequired\n};\n\nexport default Book;\n","import React from \"react\";\nimport Book from \"./Book\";\nimport PropTypes from \"prop-types\";\n\nclass BookList extends React.Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    updateBookShelf: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { updateBookShelf } = this.props;\n    return (\n      <ol className=\"books-grid\">\n        {this.props.books.map(book => {\n          return (\n            <Book\n              {...book}\n              key={book.id}\n              updateBookShelf={shelf => updateBookShelf(book, shelf)}\n            />\n          );\n        })}\n      </ol>\n    );\n  }\n}\n\nexport default BookList;\n","import React from \"react\";\nimport BookList from \"../common/book/BookList\";\nimport PropTypes from \"prop-types\";\n\nfunction BookShelf(props) {\n  const { title, books, updateBookShelf, shelf } = props;\n\n  return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{title}</h2>\n      <div className=\"bookshelf-books\">\n        {books && books.length ? (\n          <BookList\n            books={books.filter(b => b.shelf === shelf)}\n            updateBookShelf={updateBookShelf}\n          />\n        ) : (\n          <p>No books on this shelf...</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nBookShelf.propTypes = {\n  title: PropTypes.string.isRequired,\n  books: PropTypes.array,\n  updateBookShelf: PropTypes.func.isRequired,\n  shelf: PropTypes.string.isRequired\n};\n\nexport default BookShelf;\n","import React from \"react\";\nimport BookShelf from \"./Bookshelf\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home(props) {\n  const { books, updateBookShelf } = props;\n  return (\n    <div className=\"list-books\">\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <div className=\"list-books-content\">\n        <div>\n          <BookShelf\n            title=\"Currently Reading\"\n            books={books}\n            updateBookShelf={updateBookShelf}\n            shelf=\"currentlyReading\"\n          />\n          <BookShelf\n            title=\"Want to Read\"\n            books={books}\n            updateBookShelf={updateBookShelf}\n            shelf=\"wantToRead\"\n          />\n          <BookShelf\n            title=\"Currently Reading\"\n            books={books}\n            updateBookShelf={updateBookShelf}\n            shelf=\"read\"\n          />\n        </div>\n      </div>\n      <div className=\"open-search\">\n        <Link to=\"/search\">\n          <button>Add a book</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nHome.propTypes = {\n  books: PropTypes.array.isRequired\n};\n\nexport default Home;\n","import React from \"react\";\nimport BookList from \"../common/book/BookList\";\nimport * as BookAPI from \"../BooksAPI\";\nimport PropTypes from \"prop-types\";\n\nclass Search extends React.Component {\n  static propTypes = {\n    updateBookShelf: PropTypes.func.isRequired,\n    onSearchClose: PropTypes.func.isRequired,\n    books: PropTypes.array.isRequired\n  };\n\n  state = {\n    query: \"\",\n    books: []\n  };\n\n  handleQueryChange = event => {\n    const { value } = event.target;\n    this.setState(() => {\n      return { query: value };\n    }, this.scheduleSearch);\n  };\n\n  scheduleSearch = () => {\n    clearTimeout(this.searchTimeout);\n    this.searchTimeout = setTimeout(() => {\n      this.searchBooks();\n    }, 500);\n  };\n\n  searchBooks = () => {\n    BookAPI.search(this.state.query).then(books => {\n      if (Array.isArray(books)) {\n        this.setState(prevState => {\n          return {\n            books: books || []\n          };\n        });\n      } else {\n        this.setState(prevState => ({ books: [] }));\n      }\n    });\n  };\n\n  componentWillUnmount = () => {\n    clearTimeout(this.searchTimeout);\n  };\n\n  render() {\n    const { updateBookShelf, onSearchClose } = this.props;\n    const books = this.state.books.map(b => {\n      const book = this.props.books.find(book => book.id === b.id);\n      return { ...b, shelf: book && book.shelf };\n    });\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <button className=\"close-search\" onClick={onSearchClose}>\n            Close\n          </button>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={this.state.value}\n              onChange={this.handleQueryChange}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <BookList books={books} updateBookShelf={updateBookShelf} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport \"./App.css\";\nimport Home from \"./home/Home\";\nimport Search from \"./search/Search\";\nimport { Route } from \"react-router-dom\";\n\nclass BooksApp extends React.Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then(books => {\n      this.setState(() => {\n        return { books };\n      });\n    });\n  }\n\n  handleUpdateBook = (book, shelf) => {\n    // If the book is already on the shelf, no need to\n    // send an api request.\n    if (book.shelf === shelf) {\n      return;\n    }\n\n    BooksAPI.update(book, shelf).then(response => {\n      this.setState(prevState => {\n        let books = prevState.books.filter(b => b.id !== book.id);\n        if (shelf !== \"none\") {\n          const newBook = { ...book, shelf };\n          books.push(newBook);\n        }        \n        return { books };\n      });\n    });\n  };\n\n  render() {    \n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Home\n              books={this.state.books}\n              updateBookShelf={this.handleUpdateBook}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/search\"\n          render={({ history }) => (\n            <Search\n              books={this.state.books}\n              updateBookShelf={this.handleUpdateBook}\n              onSearchClose={() => {\n                history.push(\"/\");\n              }}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL + \"/\"}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}